@page "{slug}"
@using UniversalReportHeavyDemo.ViewModels
@using UniversalReportCore.ViewModels
@model UniversalReportHeavyDemo.Pages.Reports.IndexModel
@{
    ViewData["Title"] = $"{Model.PageMeta.Title} {Model.PageMeta.Subtitle}";
}
@await Html.PartialAsync("_PageHeadingPartial", Model.PageMeta)
<div class="container mt-4">
    @if (Model.Items != null && Model.Items.Any())
    {
        <span class="d-inline-flex align-items-center me-2 mb-2" role="toolbar" aria-label="Toolbar with button groups">
            <span class="btn-group btn-group-sm" role="group" aria-label="First group">
                <button class="btn btn-primary d-flex align-items-center" type="button" data-bs-toggle="collapse" data-bs-target="#collapseFilter" aria-expanded="false" aria-controls="collapseFilter">
                    Filter
                </button>
            </span>
        </span>

        <table class="table table-striped mt-3">
            <thead>
                <tr class="bg-light">
                    <th class="align-middle text-center m-0"><input class="m-0" type="checkbox" id="selectAll" /></th>
                    @foreach (var column in Model?.ReportColumns)
                    {
                        <column-heading column="@column" model="@Model?.Params" sort="@Model?.CurrentSort" page="/Reports/Index"></column-heading>
                    }
                </tr>
                <form method="get">
                    <tr class="bg-light collapse" id="collapseFilter">
                        <th></th>
                            @foreach (var column in Model?.ReportColumns)
                            {
                                var options = Model?.FilterOptions.Where(a => a.Heading == column.PropertyName).Select(a => a.Options).FirstOrDefault();
                            if (options != null)
                                {
                                    <column-filter options="@options"></column-filter>
                                }
                                else
                                {
                                    <th></th>
                                }
                            }
                            <!-- Preserve Other Query Parameters -->
                            <input type="hidden" name="slug" value="@Model.Params.Slug.Value" />
                            <input type="hidden" name="ipp" value="@Model.Params.Ipp.Value" />
                            <input type="hidden" name="sortOrder" value="@Model.CurrentSort" />
                            <input type="hidden" name="pi" value="@Model.Params.Pi" />
                            @if (Model.Params.CohortIds.Value != null)
                            {
                                @foreach (var cohortId in Model.Params.CohortIds.Value)
                                {
                                <input type="hidden" name="cohortIds" value="@cohortId" />
                                }
                            }
                    </tr>
                </form>
            </thead>

            <tbody>
                @foreach (IEntityViewModel<int> item in Model?.Items)
                {
                    <tr>
                        <td class="align-middle text-center m-0">
                            <input class="m-0 me-2 selectRow" type="checkbox" name="SelectedIds" value="@(((IEntityViewModel<int>)item).Id)" />
                        </td>
                        @foreach (var column in Model?.ReportColumns)
                        {
                            <column-field column="column" item="item" slug="@Model?.Params.Slug.Value"></column-field>
                        }
                    </tr>
                }
            </tbody>

            @if (Model?.Items?.Aggregates?.Any() == true)
            {
                <tfoot>
                    @if (Model?.Params.CohortIds.Value?.Any() == true)
                    {
                        @foreach (var cohortId in Model?.Params.CohortIds.Value)
                        {
                            <tr class="justify-content-center">
                                <td></td>
                                @foreach (var column in Model?.ReportColumns)
                                {
                                    <cohort-footer column="@column" model="@Model?.Params" cohort-id="@cohortId" items="Model?.Items" cohorts="Model?.Cohorts" page="/Reports/Index"></cohort-footer>
                                }
                            </tr>
                        }
                    }

                    <tr class="bg-light justify-content-center">
                        <th></th>
                        @foreach (var column in Model?.ReportColumns)
                        {
                            <column-footer column="@column" model="@Model?.Params" items="Model?.Items"></column-footer>
                        }
                    </tr>
                </tfoot>
            }
        </table>
    }
    else
    {
        <p class="text-muted">No data available for this report.</p>
    }
    <div class="text-center">
        @if (@Model?.Items?.Count > 0)
        {
            @await Html.PartialAsync("_ReportItemsPerPageSelectorPartial", new ItemsPerPageSelectorViewModel(Model?.Params, Model?.Items))
        }
        @if (Model?.Items?.HasMultiplePages == true)
        {
            @await Html.PartialAsync("_ReportPagingNavigationPartial", new ReportPagingNavigationViewModel() { CurrentSort = Model?.CurrentSort, Params = Model?.Params, Items = Model?.Items })
        }
        @if (Model?.Items?.Meta?.ContainsKey("QueryDuration") == true)
        {
            var queryDuration = Model?.Items?.Meta?["QueryDuration"];
            <p class="small mt-4"><i>Query Duration: @queryDuration</i></p>
        }
    </div>
</div>
@section Scripts {
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            document.getElementById("selectAll").addEventListener("change", function () {
                let checkboxes = document.querySelectorAll(".selectRow");
                checkboxes.forEach(cb => cb.checked = this.checked);
            });
        });
    </script>

}
