@page "{slug}"
@using UniversalReportCore.ViewModels
@using UniversalReportHeavyDemo.ViewModels
@model UniversalReportHeavyDemo.Pages.Reports.IndexModel
@{
    ViewData["Title"] = $"{Model.PageMeta.Title} {Model.PageMeta.Subtitle}";
}
@await Html.PartialAsync("_PageHeadingPartial", Model.PageMeta)
<div class="container mt-4">
    @if (Model.Items != null && Model.Items.Any())
    {
        <table class="table table-striped mt-3">
            <thead>
                <tr class="bg-light">
                    <th class="align-middle text-center m-0"><input class="m-0" type="checkbox" id="selectAll" /></th> <!-- Select All Checkbox -->
                    @foreach (var column in Model?.ReportColumns)
                    {
                        <th class="align-middle @(column.HideInPortrait ? "hide-in-portrait" : "")">
                            @if (column.IsSortable)
                            {
                                var newSortOrder = column.IsSortDescending
                                ? $"{column.PropertyName}Asc"
                                : $"{column.PropertyName}Desc";

                                <a href="@Url.Page("/Reports/Index", new { slug = Model?.Params.Slug.Value, ipp=Model?.Params.Ipp.Value, sortOrder = newSortOrder, cohortIds = Model?.Params.CohortIds.Value })">
                                    @column.DisplayName
                                </a>

                                @if (column.PropertyName == Model?.CurrentSort.Replace("Asc", "").Replace("Desc", ""))
                                {
                                    <span class="sort-indicator">
                                        @(column.IsSortDescending ? "↓" : "↑")
                                    </span>
                                }
                            }
                            else
                            {
                                @column.DisplayName
                            }
                        </th>
                    }
                </tr>
            </thead>

            <tbody>
                @foreach (var item in Model?.Items)
                {
                    <tr>
                        <td class="align-middle text-center m-0">
                            <input class="m-0 me-2 selectRow" type="checkbox" name="SelectedIds" value="@(((IEntityViewModel<int>)item).Id)" />
                        </td>
                        @foreach (var column in Model?.ReportColumns)
                        {
                            <render-column column="column" item="item" slug="@Model?.Params.Slug.Value"></render-column>
                        }
                    </tr>
                }
            </tbody>

            @if (Model?.Items?.Aggregates?.Any() == true)
            {
                <tfoot>
                    @if (Model?.Params.CohortIds.Value?.Any() == true)
                    {
                        @foreach (var cohortId in Model?.Params.CohortIds.Value)
                        {
                            <tr class="justify-content-center">
                                <td></td>
                                @foreach (var column in Model?.ReportColumns)
                                {
                                    bool hasBeenKeyed = false;
                                    <td class="@(column.HideInPortrait ? "hide-in-portrait" : "")">
                                        @if (column.IsDisplayKey && !hasBeenKeyed)
                                        {
                                            hasBeenKeyed = true;
                                            var cohort = Model?.Cohorts.FirstOrDefault(c => c.Id == cohortId);
                                            <a class="m-0 btn-sm btn-link" href="@Url.Page("/Reports/Index", new {
                                                    slug = Model?.Params.Slug.Value,
                                                    ipp = Model?.Params.Ipp.Value,
                                                    sortOrder = Model?.CurrentSort,
                                                    cohortIds = cohortId })">
                                                @(cohort != null ? cohort.Name : $"Cohort {cohortId} Totals")
                                            </a>
                                        }
                                        else
                                        {
                                            var cohortKey = $"{column.PropertyName}_{cohortId}";
                                            var value = Model?.Items?.Aggregates?.ContainsKey(cohortKey) == true
                                            ? Model.Items.Aggregates[cohortKey]
                                            : null;

                                            if (value != null)
                                            {
                                                string formattedValue = value is double or float or decimal
                                                ? $"{value:N2}" // Format with 2 decimal places
                                                : $"{value}";   // Default formatting for other types

                                                @formattedValue
                                            }
                                            else
                                            {

                                            }
                                        }
                                    </td>
                                }
                            </tr>
                        }
                    }

                    <tr class="bg-light justify-content-center">
                        <th></th>
                        @foreach (var column in Model?.ReportColumns)
                        {
                            var value = Model?.Items?.Aggregates?.ContainsKey(column.PropertyName) == true
                            ? Model.Items.Aggregates[column.PropertyName]
                            : null;

                            <th class="@(column.HideInPortrait ? "hide-in-portrait" : "")">
                                @if (value != null)
                                {
                                    string formattedValue = value is double or float or decimal
                                    ? $"{value:N2}" // Format with 2 decimal places
                                    : $"{value}";   // Default formatting for other types

                                    @formattedValue
                                }
                            </th>
                        }
                    </tr>
                </tfoot>
            }
        </table>
    }
    else
    {
        <p class="text-muted">No data available for this report.</p>
    }
    <div class="text-center">
        @if (@Model?.Items?.Count > 0)
        {
            @await Html.PartialAsync("_ReportItemsPerPageSelectorPartial", (Model?.Params, Model?.Items))
        }
        @if (Model?.Items?.HasMultiplePages == true)
        {
            @await Html.PartialAsync("_ReportPagingNavigationPartial", (Model?.CurrentSort, Model?.Params, Model?.Items))
        }
    </div>
</div>
@section Scripts {
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            document.getElementById("selectAll").addEventListener("change", function () {
                let checkboxes = document.querySelectorAll(".selectRow");
                checkboxes.forEach(cb => cb.checked = this.checked);
            });
        });
    </script>
}
